class Solution {
    public String reverseVowels(String s) {
        // Convert string into a mutable char array
        char[] arr = s.toCharArray();

        // Stack to store all vowels in order of appearance
        Stack<Character> st = new Stack<>();

        // Step 1: Collect all vowels into stack
        for (int i = 0; i < arr.length; i++) {
            char c = arr[i];
            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' ||
                c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {
                st.push(c);
            }
        }

        // Step 2: Replace vowels with reversed vowels by popping from stack
        for (int i = 0; i < arr.length; i++) {
            char c = arr[i];
            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' ||
                c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {
                arr[i] = st.pop();
            }
        }

        // Step 3: Convert char array back to string and return
        // ✅ Use new String(arr) when you want the string content
        // ❌ Never use arr.toString() for arrays (gives memory reference like [C@1a2b3c)
        // ⚡ Arrays.toString(arr) prints ['h','e','l','l','o'] with [] and commas
        return new String(arr);
    }
}
